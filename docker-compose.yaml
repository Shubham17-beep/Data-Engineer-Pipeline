version: '3'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    image: apache/airflow:2.5.1
    command: webserver
    environment:
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/opt/airflow/logs'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__BASE_URL: 'http://localhost:8080'
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/opt/airflow/logs
    restart: always


  airflow-scheduler:
    image: apache/airflow:2.5.1
    command: scheduler
    environment:
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/opt/airflow/logs'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/opt/airflow/logs
    restart: always

  airflow-worker:
    image: apache/airflow:2.5.1
    command: celery worker
    environment:
      AIRFLOW__CORE__EXECUTOR: 'CeleryExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CELERY__BROKER_URL: 'redis://redis:6379/0'
      AIRFLOW__CELERY__RESULT_BACKEND: 'db+postgresql://airflow:airflow@postgres/airflow'
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/opt/airflow/logs'
    volumes:
      - ./logs:/opt/airflow/logs
    depends_on:
      - postgres
      - redis
    restart: always


  airflow-triggerer:
    image: apache/airflow:2.5.1
    command: triggerer
    environment:
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/opt/airflow/logs'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/opt/airflow/logs
    restart: always

  airflow-init:
    image: apache/airflow:2.5.1
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    environment:
      AIRFLOW__LOGGING__REMOTE_LOGGING: 'False'
      AIRFLOW__LOGGING__LOGGING_LEVEL: 'INFO'
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/opt/airflow/logs'
      AIRFLOW__CORE__EXECUTOR: 'LocalExecutor'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: 'postgresql+psycopg2://airflow:airflow@postgres/airflow'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    depends_on:
      - postgres
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    restart: always

  airflow-cli:
    image: apache/airflow:2.5.1
    command:
      - bash
      - -c
      - airflow

  flower:
    image: apache/airflow:2.5.1
    command: celery flower
    ports:
      - 5555:5555
    depends_on:
      - postgres
      - redis
    restart: always

volumes:
  postgres-db-volume:
